#+Title: Teoría de categorías y cálculo lambda
#+Author: Mario Román
#+Latex_header: \institute{Grado en Ingeniería Informática y Matemáticas}
#+Options: H:3
#+Language: es
#+Latex_class: beamer
#+Latex_class_options: [usenames,dvipsnames]
#+Latex_header: \input{_preamble.tex}
#+Latex_cmd: xelatex

* Ideas                                                            :noexport:
No seguir el orden del trabajo es más sensato, me deja jugar con la
idea de que estamos haciendo paralelamente lo mismo en matemáticas y
programación.  Pueden usarse interpretaciones derivadas de BHK.

 - Tipos son teoremas.
 - Términos son demostraciones.
 - Inferencia de tipos es matemática inversa.

* Una sección
** Una subsección
*** Introducción
:PROPERTIES:
:BEAMER_OPT: fragile
:END:

Configura esta *presentación* mediante el archivo 
~\_preamble.tex~.

#+begin_theorem
No hay números naturales mayores de 7.
#+end_theorem

*** Otra diapositiva
:PROPERTIES:
:BEAMER_OPT: fragile
:END:

#+begin_example
$ git clone git@github.com:libreim/templates
$ cd templates
#+end_example

* Cálculo lambda
** Cálculo lambda no tipado
** Cálculo lambda tipado
** Interpretación de Brouwer-Heyting-Kolmogorov
* Mikrokosmos
** Implementación
** Interacción
** Uso
** Entorno de programación
** Programando en el cálculo lambda sin tipos
** Programando en el cálculo lambda simplemente tipado
* Categorías cartesianas
** Cálculo lambda con tipos
** Categorías cartesianas
** Isomorfismo de Curry-Howard
** Argumentos diagonales
* Conclusiones
** Conclusiones
*** Conclusiones
:PROPERTIES:
:END:
¡Muchas gracias!

* Local variables                                                    :ignore:
# Local Variables:
# org-latex-pdf-process: ("xelatex -interaction nonstopmode %f" "xelatex -interaction nonstopmode %f")
# org-latex-packages-alist: nil
# org-latex-default-packages-alist: (("T1" "fontenc" t) ("" "fixltx2e" nil) ("" "graphicx" t) ("" "grffile" t) ("" "longtable" nil) ("" "wrapfig" nil) ("" "rotating" nil) ("normalem" "ulem" t) ("" "amsmath" t) ("" "textcomp" t) ("" "amssymb" t) ("" "capt-of" nil))
# End:
